version: '3'
services:
  # zk
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=zookeeper
      
  # kafka
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
      
  #redis    
  redis:
    image: "redis:alpine"
    hostname: redis
    ports:
     - "6379:6379"
     
  #mysql   
  mysql-docker-container:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=Root@1234
      - MYSQL_DATABASE=demo
      - MYSQL_USER=demo
      - MYSQL_PASSWORD=Demo@1234
    volumes:
      - /data/mysql
      
  # producer    
  cqrs-kafka-demo-producer:
    image: cqrs-kafka-demo-producer-image
    build:
      context: ./cqrs-kafka-demo-producer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - 8090:8080
    volumes:
      - /data/cqrs-kafka-demo-producer
    links:
      - kafka:kafka
      
  # consumer for storage
  cqrs-kafka-demo-consumer-storage:
    image: cqrs-kafka-demo-consumer-storage-image
    build:
      context: ./cqrs-kafka-demo-consumer-storage
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - mysql-docker-container
    ports:
      - 8091:8080
    volumes:
      - /data/cqrs-kafka-demo-consumer-storage
    links:
      - kafka:kafka   

  # consumer for cache
  cqrs-kafka-demo-consumer-cache:
    image: cqrs-kafka-demo-consumer-cache-image
    build:
      context: ./cqrs-kafka-demo-consumer-cache
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - 8092:8080
    volumes:
      - /data/cqrs-kafka-demo-consumer-cache
    links:
      - kafka:kafka
      - "redis:redis"